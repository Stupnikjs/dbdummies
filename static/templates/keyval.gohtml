{{template "base" .}}

{{define "content"}}

<p>
    I choosed a key value store db because it was the simplest database i could think of 
    first i implemented a parser that take the input and convert it into a database operation, 
    this is my first try, im just gonna implement the simplest architecture i could have think of 
 </p>

 <p>
    i just implemented 3 commands set get and del, those are selfexplanatory, 
    i use 
 </p>
    <p> 
        the most intersting commes with the storage engine, 
        i built it at first with singleton architecture by total lazyness, 
        my goal is to store key string plus position of the value in the db file (start and end)
        so to parse the key im gonna have to read the whole header file to find key and the value location and then
        read the db file.  
    </p>
<p> when i call the set method i write 24bytes to the header: <ul>
<li> the key 8bytes </li>
<li> the start of value 8bytes (or u64)</li>
<li> </li>
</ul> 
    <p> so the Key max length is 8bytes </p>
    <p> the max dbfile length is max_u64 </p>


 <p>
    The header will store the key wich is max 8bytes for less u have a padding func with 0
    Then the 8 next bytes store the start of the value stored in the db file 
    Then the last bytes store the value len 
 </p>

 <p> 
   The header will be parsed by a storageEngine funciton that will put it in memory within a HashMap 
 </p>

 <p> 
  At this point we can see this is already hightly ineficient, but wait for the delete part  
 </p>

 <p>
    The delete method has to read the header file, then rewrite it to a newheaderfile ignoring the deleted one, 
    whe have to remove it also from the hash map, and then from .. the db file. this is where its really painfull since 
    we would need to rewrite the whole file, because we cant simply delete the bytes since data is store after each other in this architecture.

 </p>

<code>
<pre>

</pre>
</code>
{{end}}